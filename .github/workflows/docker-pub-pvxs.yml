name: Docker Multi-Platform Build Pipeline

on:
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Which image to build'
        required: true
        type: choice
        options:
          - epics-base
          - pvxs
          - spva_std
          - spva_krb
          - spva_ldap
  push:
    branches:
      - 'tls-dev'

jobs:
  check_docker_changes:
    runs-on: ubuntu-22.04
    outputs:
      non_docker_changed: ${{ steps.filter.outputs.non_docker }}
      spva_std_changed: ${{ steps.filter.outputs.spva_std }}
      spva_krb_changed: ${{ steps.filter.outputs.spva_krb }}
      spva_ldap_changed: ${{ steps.filter.outputs.spva_ldap }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.before }}
          filters: |
            non_docker:
              - '**'
              - '!example/docker/**'
              - '!.github/**'
              - '!documentation/**'
              - '!.ci/**'
              - '!.ci-local/**'
            spva_std:
              - 'example/docker/spva_std/**'
            spva_krb:
              - 'example/docker/spva_krb/**'
            spva_ldap:
              - 'example/docker/spva_ldap/**'

  build-epics-base:
    if: |
      github.event_name == 'workflow_dispatch' && 
      github.event.inputs.build_target == 'epics-base'
    uses: george-mcintyre/epics-base/.github/workflows/docker-pub-epics-base.yml@7.0-method_and_authority
    secrets:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  build-pvxs:
    needs: check_docker_changes
    if: |
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.build_target == 'pvxs') || 
      (github.event_name == 'push' && 
       needs.check_docker_changes.outputs.non_docker_changed == 'true')
    runs-on: ubuntu-22.04
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
          submodules: recursive
      # Add your build steps here
      - name: Build pvxs
        run: echo "Building pvxs"

  build-spva-std:
    needs: check_docker_changes
    if: |
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.build_target == 'spva_std') || 
      (github.event_name == 'push' && 
       needs.check_docker_changes.outputs.spva_std_changed == 'true' && 
       needs.check_docker_changes.outputs.non_docker_changed == 'false')
    runs-on: ubuntu-22.04
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
      # Add your build steps here
      - name: Build spva_std
        run: echo "Building spva_std"

  build-spva-krb:
    needs: check_docker_changes
    if: |
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.build_target == 'spva_krb') || 
      (github.event_name == 'push' && 
       needs.check_docker_changes.outputs.spva_krb_changed == 'true' && 
       needs.check_docker_changes.outputs.non_docker_changed == 'false')
    runs-on: ubuntu-22.04
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
      # Add your build steps here
      - name: Build spva_krb
        run: echo "Building spva_krb"

  build-spva-ldap:
    needs: check_docker_changes
    if: |
      (github.event_name == 'workflow_dispatch' && 
       github.event.inputs.build_target == 'spva_ldap') || 
      (github.event_name == 'push' && 
       needs.check_docker_changes.outputs.spva_ldap_changed == 'true' && 
       needs.check_docker_changes.outputs.non_docker_changed == 'false')
    runs-on: ubuntu-22.04
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
      # Add your build steps here
      - name: Build spva_ldap
        run: echo "Building spva_ldap"

  trigger-pvxs-after-base:
    needs: [check_docker_changes, build-epics-base]
    if: needs.build-epics-base.result == 'success'
    uses: ./.github/workflows/docker-builds.yml
    with:
      epics_base_status: ${{ needs.build-epics-base.result }}
      pvxs_status: null
      spva_std_status: null
      spva_krb_status: null
      spva_ldap_status: null

  trigger-builds-after-pvxs:
    needs: [check_docker_changes, build-pvxs]
    if: needs.build-pvxs.result == 'success'
    uses: ./.github/workflows/docker-builds.yml
    with:
      epics_base_status: null
      pvxs_status: ${{ needs.build-pvxs.result }}
      spva_std_status: null
      spva_krb_status: null
      spva_ldap_status: null

  trigger-builds-after-std:
    needs: [check_docker_changes, build-spva-std]
    if: |
      needs.build-spva-std.result == 'success' ||
      needs.check_docker_changes.outputs.spva_std_changed == 'true'
    uses: ./.github/workflows/docker-builds.yml
    with:
      epics_base_status: null
      pvxs_status: null
      spva_std_status: ${{ needs.build-spva-std.result }}
      spva_krb_status: null
      spva_ldap_status: null

  trigger-builds-after-krb:
    needs: [check_docker_changes, build-spva-krb]
    if: |
      needs.build-spva-krb.result == 'success' ||
      needs.check_docker_changes.outputs.spva_krb_changed == 'true'
    uses: ./.github/workflows/docker-builds.yml
    with:
      epics_base_status: null
      pvxs_status: null
      spva_std_status: null
      spva_krb_status: ${{ needs.build-spva-krb.result }}
      spva_ldap_status: null

  trigger-builds-after-ldap:
    needs: [check_docker_changes, build-spva-ldap]
    if: |
      needs.build-spva-ldap.result == 'success' ||
      needs.check_docker_changes.outputs.spva_ldap_changed == 'true'
    uses: ./.github/workflows/docker-builds.yml
    with:
      epics_base_status: null
      pvxs_status: null
      spva_std_status: null
      spva_krb_status: null
      spva_ldap_status: ${{ needs.build-spva-ldap.result }} 