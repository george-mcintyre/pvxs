name: Docker Multi-Platform Build Pipeline

on:
  workflow_dispatch:
    inputs:
      build_target:
        description: 'Which image to build'
        required: true
        type: choice
        options:
          - epics-base
          - pvxs
          - spva_std
          - spva_krb
          - spva_ldap
          - all
  push:
    branches:
      - 'tls-dev'

jobs:
  check_docker_changes:
    runs-on: ubuntu-latest
    outputs:
      non_docker_changed: ${{ steps.filter.outputs.non_docker }}
      spva_std_changed: ${{ steps.filter.outputs.spva_std }}
      spva_krb_changed: ${{ steps.filter.outputs.spva_krb }}
      spva_ldap_changed: ${{ steps.filter.outputs.spva_ldap }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Need at least 2 commits for comparison
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          base: ${{ github.event.before }}  # Use the previous commit SHA
          filters: |
            non_docker:
              - '**'
              - '!example/**'
              - '!.github/**'
            spva_std:
              - 'example/docker/spva_std/**'
            spva_krb:
              - 'example/docker/spva_krb/**'
            spva_ldap:
              - 'example/docker/spva_ldap/**'

  build-epics-base:
    if: |
      github.event_name == 'workflow_dispatch' && 
      (github.event.inputs.build_target == 'epics-base' || github.event.inputs.build_target == 'all')
    uses: george-mcintyre/epics-base/.github/workflows/docker-pub-epics-base.yml@7.0-method_and_authority
    secrets:
      DOCKER_USERNAME: ${{ vars.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  build-pvxs:
    needs: check_docker_changes
    if: |
      (github.event_name == 'workflow_dispatch' && 
       (github.event.inputs.build_target == 'pvxs' || github.event.inputs.build_target == 'all')) || 
      (github.event_name == 'push' && 
       needs.check_docker_changes.outputs.non_docker_changed == 'true' && 
       needs.check_docker_changes.outputs.spva_std_changed != 'true' && 
       needs.check_docker_changes.outputs.spva_krb_changed != 'true' && 
       needs.check_docker_changes.outputs.spva_ldap_changed != 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
          submodules: recursive

  build-pvxs-after-base:
    needs: [check_docker_changes, build-epics-base]
    if: |
      needs.build-epics-base.result == 'success' && 
      (github.event_name == 'workflow_dispatch' && 
       (github.event.inputs.build_target == 'pvxs' || github.event.inputs.build_target == 'all'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
          submodules: recursive

  build-spva-std:
    needs: [check_docker_changes, build-pvxs, build-pvxs-after-base]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && 
       (github.event.inputs.build_target == 'spva_std' || github.event.inputs.build_target == 'all')) || 
      (github.event_name == 'push' && needs.check_docker_changes.outputs.spva_std_changed == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev

  build-spva-krb:
    needs: [check_docker_changes, build-spva-std]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && 
       (github.event.inputs.build_target == 'spva_krb' || github.event.inputs.build_target == 'all')) || 
      (github.event_name == 'push' && needs.check_docker_changes.outputs.spva_krb_changed == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev

  build-spva-ldap:
    needs: [check_docker_changes, build-spva-std]
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch' && 
       (github.event.inputs.build_target == 'spva_ldap' || github.event.inputs.build_target == 'all')) || 
      (github.event_name == 'push' && needs.check_docker_changes.outputs.spva_ldap_changed == 'true')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: tls-dev
