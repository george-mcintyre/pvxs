stateDiagram-v2
    title Server TLS Context State Machine

    [*] --> Init: Context Creation
    
    state Init {
        [*] --> CheckConfig
        CheckConfig --> NoCerts: No Certificates\nConfigured
        CheckConfig --> ValidateCerts: Certificates\nConfigured
        
        state NoCerts {
            [*] --> CheckStopFlag
            CheckStopFlag --> Exit: stop_if_no_cert=true
            CheckStopFlag --> Continue: stop_if_no_cert=false
        }

        state ValidateCerts {
            [*] --> CertTrustValidation
            CertTrustValidation --> TrustInvalid: Expired/Not Yet Valid\nUntrusted/Chain Invalid
            CertTrustValidation --> CheckMonitoring: Trust Valid
            TrustInvalid --> CheckStopFlag
            CheckMonitoring --> RequiresMonitoring: Has Status\nMonitoring Attr
            CheckMonitoring --> SimpleValid: No Status\nMonitoring Attr
        }
    }

    Init --> DegradedMode: (No Certs || Trust Invalid) &\nstop_if_no_cert=false
    Init --> [*]: (No Certs || Trust Invalid) &\nstop_if_no_cert=true
    Init --> TlsReady: Certificate Trust Valid &\nNo Monitoring Required
    Init --> TcpReady: Certificate Trust Valid &\nMonitoring Required
    
    TcpReady --> TlsReady: Certificate\nStatus Valid
    TcpReady --> DegradedMode: Certificate\nStatus Invalid &\nstop_if_no_cert=false
    TcpReady --> [*]: Certificate\nStatus Invalid &\nstop_if_no_cert=true
    TcpReady --> Suspended: Certificate\nStatus Unknown &\nstop_if_no_cert=true
    TcpReady --> DegradedMode: Certificate\nStatus Unknown &\nstop_if_no_cert=false
    
    TlsReady --> TcpReady: Status Check\nRequired & Unknown
    TlsReady --> Suspended: Status Check Required &\nUnknown & stop_if_no_cert=true
    TlsReady --> DegradedMode: Certificate\nInvalid &\nstop_if_no_cert=false
    TlsReady --> [*]: Certificate\nInvalid &\nstop_if_no_cert=true
    
    Suspended --> TlsReady: Certificate\nStatus Valid
    Suspended --> [*]: Certificate\nStatus Invalid
    
    state DegradedMode {
        [*] --> ListenTCP
        ListenTCP --> RejectTLS: TLS Connection\nAttempt
    }
    
    state TcpReady {
        [*] --> ListenBoth
        ListenBoth --> AcceptTCP: TCP Connection
        ListenBoth --> DeferTLS: TLS Connection
    }
    
    state TlsReady {
        [*] --> ListenAll
        ListenAll --> AcceptAny: Connection\nRequest
        ListenAll --> CheckValidity: Periodic\nValidation
        CheckValidity --> ListenAll: Still Valid
        CheckValidity --> ExitOrDegrade: Invalid
    }
    
    state Suspended {
        [*] --> WaitingPVACMS
        WaitingPVACMS --> NoResponses: Connection\nAttempts
    } 